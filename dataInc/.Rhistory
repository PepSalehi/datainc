combined <- read.csv("C:/Users/Peyman.n/Dropbox/data incubator/flights/combined.csv", stringsAsFactors=FALSE, header = TRUE)
df <- combined %>%   filter(!is.na(ARR_DELAY)) %>%  mutate(status = ifelse(ARR_DELAY < 5, "early",  "late" ))
library(dplyr)
df <- combined %>%   filter(!is.na(ARR_DELAY)) %>%  mutate(status = ifelse(ARR_DELAY < 5, "early",  "late" ))
df$CARRIER <- as.factor(df$CARRIER)
df$status <- as.factor(df$status)
library(MASS)
lda.fit <- lda(status ~ MONTH + DAY_OF_MONTH  + CARRIER + ORIGIN_AIRPORT_ID + DEST_AIRPORT_ID  , data = training)
lda.fit
plot(lda.fit) # what does this show?
lda.pred <- predict(lda.fit, test)
lda.class =lda.pred$class
table(lda.class, test$status)
smp_size <- floor(0.8 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
training <- df[train_ind,]
test <- df[-train_ind,]
library(MASS)
lda.fit <- lda(status ~ MONTH + DAY_OF_MONTH  + CARRIER + ORIGIN_AIRPORT_ID + DEST_AIRPORT_ID  , data = training)
lda.fit
plot(lda.fit) # what does this show?
lda.pred <- predict(lda.fit, test)
lda.class =lda.pred$class
table(lda.class, test$status)
glm.fit <- glm(status ~ MONTH + DAY_OF_MONTH  + CARRIER + ORIGIN_AIRPORT_ID + DEST_AIRPORT_ID  , data = training, family = binomial)
summary(glm.fit)
glm.probs =predict(glm.fit,test, type ="response")
glm.probs[1:10]
contrasts(training$status)
glm.pred <- rep("late", nrow(test))
glm.pred[glm.probs<0.2] = "early"
table(glm.pred, test$status)
glm.pred <- rep("late", nrow(test))
glm.pred[glm.probs<0.25] = "early"
table(glm.pred, test$status)
glm.pred <- rep("late", nrow(test))
glm.pred[glm.probs<0.29] = "early"
table(glm.pred, test$status)
(148521)/(129325 + 148521)
glm.pred <- rep("late", nrow(test))
glm.pred[glm.probs<0.4] = "early"
table(glm.pred, test$status)
7408 / (7408 + 270438)
glm.pred <- rep("late", nrow(test))
glm.pred[glm.probs<0.3] = "early"
table(glm.pred, test$status)
122593/(122593+155253)
mean(glm.pred)
mean(glm.pred, na.rm = TRUE)
mean(glm.probs)
155253/(442190 + 155253)
(122593+442190)/nrow(test)
7408 / (7408 + 270438)
model.matrix(status ~ MONTH + DAY_OF_MONTH  + CARRIER + ORIGIN_AIRPORT_ID + DEST_AIRPORT_ID  , data = df)
flights.dummy <- model.matrix(status ~ MONTH + DAY_OF_MONTH  + CARRIER + ORIGIN_AIRPORT_ID + DEST_AIRPORT_ID  , data = df)
View(flights.dummy)
View(flights.dummy)
flights.dummy <- model.matrix( ~ MONTH + DAY_OF_MONTH  + CARRIER + ORIGIN + DEST  , data = df)
head(df)
colnames(df)
flights.dummy <- model.matrix( ~ MONTH + DAY_OF_MONTH  + CARRIER  , data = df)
View(flights.dummy)
rm(flights.dummy)
rm(glm.fit)
library(ROCR)
apropos("confusion")
RSiteSearch("confusion", restrict = "functions")
?cut.POSIXt
str(df$DEP_TIME)
str(df$FL_DATE)
max(df$DEP_TIME)
Sys.time()
Sys.time()
now <- Sys.time()
?xts::timeBasedSeq
df$DEP_TIME[1]
timeBasedSeq('20080101 0830',length=100)
library(xts)
timeBasedSeq('20080101 0830',length=100)
head(df)
df$DEP_TIME_pos <- as.POSIXct(df$DEP_TIME, origin=df$FL_DATE)
cut(df$DEP_TIME_pos, breaks="hour")
temp <- cut(df$DEP_TIME_pos, breaks="hour")
head(temp)
head(df$DEP_TIME_pos)
tail(df$DEP_TIME_pos)
df$DEP_TIME_pos[20000]
df$DEP_TIME_pos[2000]
df$DEP_TIME_pos[20]
df$DEP_TIME_pos[2000000000]
df$DEP_TIME_pos[2000000]
df$DEP_TIME_pos[2000001]
df$DEP_TIME_pos[200001]
levels(temp)
df$DEP_TIME_pos <- as.POSIXct(df$DEP_TIME) #, origin=df$FL_DATE
df$DEP_TIME_pos <- as.POSIXct(df$DEP_TIME, origin = df$FL_DATE[1]) #, origin=df$FL_DATE
temp <- cut(df$DEP_TIME_pos, breaks="hour")
heaD(temp)
head(temp)
levels(temp)
temp
tail(temp)
df$DEP_TIME_pos <- as.numeric(as.POSIXct(df$DEP_TIME, origin = df$FL_DATE[1])) #, origin=df$FL_DATE
df$DEP_TIME_pos
head(df$DEP_TIME_pos)
as.POSIXct(df$DEP_TIME, format = "%H%M")
as.POSIXct(df$DEP_TIME[1], format = "%H%M")
format(df$DEP_TIME[1], "%H%M")
start <- as.POSIXct(x = "11:00", format = "%H:%M")
start <- as.POSIXct(x = "1100", format = "%H:%M")
start <- as.POSIXct(x = as.character(df$DEP_TIME), format = "%H:%M")
head(start)
temp <-  combined %>% filter(ORIGIN_STATE_ABR == sample_dest) %>%  filter(!is.na(ARR_DELAY)) %>% group_by(CARRIER)
# %>%
#   select(c(ARR_DELAY, CARRIER))
carriers <- unique(temp$CARRIER)
par(mfrow=c(5,3), mar=c(2,2,4,1))
for (i in carriers){
delays <- temp %>% filter(CARRIER == i) %>% .$ARR_DELAY
d = density(delays)
plot(d, main= i , cex.main=1.5, cex.axis=1, border="white", col="#cccccc",space=0, axes=FALSE, xlim=c(-100,200),
ylim= c(0, .041), yaxs="i") # , bty="n"
polygon(d, col="#e26b43", border="white", ylim= c(0, .031))
# Draw custom axes
axis(side=1, at=c(seq(-100, 400, 100)), labels=TRUE)
axis(side=2, at=c(0,.01,.02,.03), cex=0.7)
abline(v= quantile(delays, .9) )
mtext(paste0("90th percentile delay is ", round(quantile(delays, .9)) ," mins"))
}
temp <-  combined %>% filter(ORIGIN_STATE_ABR == sample_dest) %>%  filter(!is.na(ARR_DELAY)) %>% group_by(CARRIER)
# %>%
#   select(c(ARR_DELAY, CARRIER))
carriers <- unique(temp$CARRIER)
par(mfrow=c(5,3), mar=c(2,2,4,1))
for (i in carriers){
delays <- temp %>% filter(CARRIER == i) %>% .$ARR_DELAY
d = density(delays)
plot(d, main= i , cex.main=1.5, cex.axis=1, border="white", col="#cccccc",space=0, axes=FALSE, xlim=c(-100,200),
ylim= c(0, .041), yaxs="i") # , bty="n"
polygon(d, col="#e26b43", border="white", ylim= c(0, .031))
# Draw custom axes
axis(side=1, at=c(seq(-100, 400, 100)), labels=TRUE)
axis(side=2, at=c(0,.01,.02,.03), cex=0.7)
abline(v= quantile(delays, .9) )
mtext(paste0("90th percentile delay is ", round(quantile(delays, .9)) ," mins"))
}
temp <-  combined %>% filter(ORIGIN_STATE_ABR == sample_dest) %>%  filter(!is.na(ARR_DELAY)) %>% group_by(CARRIER)
library("dplyr", lib.loc="~/R/win-library/3.1")
temp <-  combined %>% filter(ORIGIN_STATE_ABR == sample_dest) %>%  filter(!is.na(ARR_DELAY)) %>% group_by(CARRIER)
# %>%
#   select(c(ARR_DELAY, CARRIER))
carriers <- unique(temp$CARRIER)
par(mfrow=c(5,3), mar=c(2,2,4,1))
for (i in carriers){
delays <- temp %>% filter(CARRIER == i) %>% .$ARR_DELAY
d = density(delays)
plot(d, main= i , cex.main=1.5, cex.axis=1, border="white", col="#cccccc",space=0, axes=FALSE, xlim=c(-100,200),
ylim= c(0, .041), yaxs="i") # , bty="n"
polygon(d, col="#e26b43", border="white", ylim= c(0, .031))
# Draw custom axes
axis(side=1, at=c(seq(-100, 400, 100)), labels=TRUE)
axis(side=2, at=c(0,.01,.02,.03), cex=0.7)
abline(v= quantile(delays, .9) )
mtext(paste0("90th percentile delay is ", round(quantile(delays, .9)) ," mins"))
}
temp <-  combined %>% filter(ORIGIN_STATE_ABR == sample_dest) %>%  filter(!is.na(ARR_DELAY)) %>% group_by(CARRIER)
sample_dest <- "MA" #combined$DEST_CITY_NAME[1]
temp <-  combined %>% filter(ORIGIN_STATE_ABR == sample_dest) %>%  filter(!is.na(ARR_DELAY)) %>% group_by(CARRIER)
carriers <- unique(temp$CARRIER)
par(mfrow=c(5,3), mar=c(2,2,4,1))
for (i in carriers){
delays <- temp %>% filter(CARRIER == i) %>% .$ARR_DELAY
d = density(delays)
plot(d, main= i , cex.main=1.5, cex.axis=1, border="white", col="#cccccc",space=0, axes=FALSE, xlim=c(-100,200),
ylim= c(0, .041), yaxs="i") # , bty="n"
polygon(d, col="#e26b43", border="white", ylim= c(0, .031))
# Draw custom axes
axis(side=1, at=c(seq(-100, 400, 100)), labels=TRUE)
axis(side=2, at=c(0,.01,.02,.03), cex=0.7)
abline(v= quantile(delays, .9) )
mtext(paste0("90th percentile delay is ", round(quantile(delays, .9)) ," mins"))
}
#
sample_origin <- c("MA")
sample_destination <- c("NY")
sample_months <- c(1,2,3,4,5)
sample_OD <- df[df$MONTH %in% sample_months & df$ORIGIN_STATE_ABR %in% sample_origin , ]
sample_OD$status <- factor(sample_OD$status)
sample_OD$CARRIER <- factor( sample_OD$CARRIER)
sample_OD$DAY_OF_MONTH <- factor( sample_OD$DAY_OF_MONTH)
sample_OD$TimeBIn <- factor(sample_OD$TimeBIn)
sample_OD <- sample_OD %>%  dplyr::select(CARRIER, DAY_OF_MONTH, DEST_STATE_ABR, TimeBIn, DISTANCE, status, MONTH)
df$Time <- ifelse(nchar(df$DEP_TIME) == 3, paste0('0', df$DEP_TIME), ifelse(nchar(df$DEP_TIME) == 2,paste0('0','0', df$DEP_TIME), df$DEP_TIME))
df$newTime <- as.POSIXct(df$Time,tz="GMT", format = "%H%M", origin= as.Date("2016-02-16"))
date1 <- as.Date("2016-02-16 ")
my.breaks <- (seq.POSIXt(as.POSIXct(date1), by = "1 hour", length.out = 24,format="%H%M",tz="GMT"))
df$TimeBIn <- cut.POSIXt((df$newTime), breaks = my.breaks)
#
sample_origin <- c("MA")
sample_destination <- c("NY")
sample_months <- c(1,2,3,4,5)
sample_OD <- df[df$MONTH %in% sample_months & df$ORIGIN_STATE_ABR %in% sample_origin , ]
sample_OD$status <- factor(sample_OD$status)
sample_OD$CARRIER <- factor( sample_OD$CARRIER)
sample_OD$DAY_OF_MONTH <- factor( sample_OD$DAY_OF_MONTH)
sample_OD$TimeBIn <- factor(sample_OD$TimeBIn)
sample_OD <- sample_OD %>%  dplyr::select(CARRIER, DAY_OF_MONTH, DEST_STATE_ABR, TimeBIn, DISTANCE, status, MONTH)
# sample_data <- df[df$MONTH %in% sample_months,]
# sample_data$status <- factor(sample_data$status)
#
smp_size <- floor(0.8 * nrow(sample_OD))
train_ind <- sample(seq_len(nrow(sample_OD)), size = smp_size)
training <- sample_OD[train_ind,]
test <- sample_OD[-train_ind,]
#
table(test$status)
(prior <- 2336/(2336 + 5302))
